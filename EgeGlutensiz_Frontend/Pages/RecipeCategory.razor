@using EgeGlutensiz_Frontend.Models
@page "/tarifler"
@inject HttpClient Http

<PageTitle>Tarifler</PageTitle>

<nav class="flex w-52 ml-4 mt-8" aria-label="breadcrumb">
    <ul class="inline-flex items-center space-x-1 md:space-x-3">
        <li class="inline-flex items-center">
            <a href="/" class="inline-flex items-center text-sm font-medium text-black hover:underline">
                <svg aria-hidden="true" class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path></svg>
                <span><NavLink href="/" Match="NavLinkMatch.All">Ev</NavLink></span>
            </a>
        </li>
        <li aria-current="page">
            <div class="flex items-center">
                <svg aria-hidden="true" class="w-6 h-6 text-black" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path></svg>
                <span class="ml-1 text-sm font-bold text-black md:ml-2">Tarifler</span>
            </div>
        </li>
    </ul>
</nav>


<section class="mb-40">
    <h1 class="text-4xl lg:text-5xl font-extrabold text-center mt-3 mb-20">Tarifler</h1>

    <!-- Cards container -->
    <div class="mb-[5rem] flex justify-center gap-6 w-[450px] flex-wrap md:w-[700px] lg:w-[90%] max-w-[1500px] mx-auto">
        @if (recipeCategories != null && recipeCategories.Any())
        {

            @foreach (var recipeCategory in recipeCategories)
            {
                <CategoryCard recipeCategory="@recipeCategory"  />
            }
        }

    </div>
</section>

@code {

    // Store t of all recipe categories
    List<RecipeCategoryModel.Root> recipeCategories = new List<RecipeCategoryModel.Root>();

    // Fetch the recipe categories
    public async Task<List<RecipeCategoryModel.Root>> GetRecipeCategories()
    {
        return await Http.GetFromJsonAsync<List<RecipeCategoryModel.Root>>("http://localhost:20990/api/category/all");
    }

    protected override async Task OnInitializedAsync()
    {
        recipeCategories = await GetRecipeCategories();
    }

}